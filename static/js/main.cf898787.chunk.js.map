{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["DropdownIcon","x","y","width","height","viewBox","space","id","points","Item","isSelected","onClick","e","className","styles","element","EmptySelector","text","SelectedItem","placeholder","selected","Array","component","ItemWrapper","onErase","SelectedItemsArray","el","items","multiselect","optionsRef","React","containerRef","timeoutBlurRef","timeoutShowRef","clearTimeout","elem","value","setTimeout","animationTime","slideUp","console","setSelected","prev","index","selectedComponent","onItemClick","onSelect","ref","tabIndex","onBlur","setShow","onFocus","key","children","Badge","variant","Example","title","description","Card","Body","Title","Text","SyntaxHighlighter","registerLanguage","js","SingleSelect","useState","setValue","style","docco","Multiselect","values","setValues","map","v","keys","App","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf898787.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './styles.scss'\n\nfunction DropdownIcon() {\n  return (\n    <svg x=\"0px\" y=\"0px\" width=\"10px\" height=\"10px\" viewBox=\"0 0 255 255\" space=\"preserve\">\n      <g>\n        <g id=\"arrow-drop-down\">\n          <polygon points=\"0,63.75 127.5,191.25 255,63.75\" />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nfunction Item({ element, onClick, isSelected }) {\n  return (\n    <div onClick={(e) => onClick(e)} className={styles.item + (isSelected ? ` ${styles.selectedOption}` : '')}>\n      {element.component}\n    </div>\n  )\n}\n\nfunction EmptySelector({text}) {\n  return (\n    <div className={styles.selectedItem + \" \" + styles.placeholder}>\n      <div>\n        {text}\n      </div>\n      \n    </div>\n  )\n}\n\nfunction SelectedItem({ selected, placeholder }) {\n\n  if (selected == null || !Array.isArray(selected) || selected.length !== 1)\n    return <EmptySelector text={placeholder}/>\n\n  const component = selected[0].component\n\n  return (\n    <div className={styles.selectedItem}>\n      {component}\n    </div>\n  )\n}\n\nfunction ItemWrapper({ children, onErase }) {\n  return (\n    <div className={styles.itemWrapper}>\n      <div className={styles.wrapperBox}>\n        {children}\n      </div>\n      \n      <div onClick={onErase} className={styles.itemEraser}>\n        x\n      </div>\n    </div>\n  )\n}\n\nfunction SelectedItemsArray({ selected, onErase, placeholder }) {\n  if (selected == null || !Array.isArray(selected))\n    return <EmptySelector text={placeholder}/>\n\n  return (\n    <div className={styles.selectedItem + \" \" + styles.multiselectedItems}>\n      {selected.map(el => (\n        <ItemWrapper onErase={() => onErase(el)}>{el.component}</ItemWrapper>\n      ))}\n    </div>\n  )\n}\n\nexport default function ({ onSelect, items = [], multiselect = false, placeholder }) {\n\n  const optionsRef = React.useRef()\n  const containerRef = React.useRef()\n  const timeoutBlurRef = React.useRef()\n  const timeoutShowRef = React.useRef()\n\n  const [show, setShow] = React.useReducer((s, value) => {\n\n    clearTimeout(timeoutShowRef.current)\n    const animationTime = 0.2;\n    const slideDown = (elem) => {\n      elem.style.display = 'block'\n      elem.style.transition = `height, ${animationTime}s linear`\n      elem.style.height = `${elem.scrollHeight}px`;\n      timeoutShowRef.current = setTimeout(() => {\n        elem.style[\"overflow-y\"] = \"auto\";\n      }, animationTime * 1000.0)\n    }\n\n    const slideUp = (elem) => {\n      elem.style[\"overflow-y\"] = \"hidden\";\n      elem.style.transition = `height, ${animationTime}s linear`\n      elem.style.height = `0px`;\n      timeoutShowRef.current = setTimeout(() => {\n        elem.style.display = \"none\";\n      }, animationTime * 1000.0)\n    }\n\n    if (value === true)\n      slideDown(optionsRef.current);\n    else\n      slideUp(optionsRef.current)\n    console.log(optionsRef)\n    return value\n  }, false)\n\n  const [selected, setSelected] = React.useState([])\n\n  const onErase = (element) => {\n    setSelected((prev) => {\n      const index = selected.findIndex(el => el.key === element.key)\n      if (index == null)\n        return prev\n      prev.splice(index, 1)\n      return [...prev]\n    })\n  }\n\n  const selectedComponent = React.useMemo(() => {\n    return multiselect === true ? \n      <SelectedItemsArray placeholder={placeholder} onErase={onErase} selected={selected} /> : \n      <SelectedItem placeholder={placeholder} selected={selected} />\n  }, [selected, multiselect])\n\n  const isSelected = React.useCallback((element) => {\n    return selected.find(el => el.key == element.key) != null\n  }, [selected])\n\n  const onItemClick = React.useMemo(() => {\n    if (multiselect === true) {\n      return (element, e) => {\n        if (isSelected(element))\n          return onErase(element)\n        setSelected(prev => [...prev, element])\n      }\n    }\n    return (element, e) => {\n      setSelected([element])\n    }\n  }, [selected, multiselect])\n\n  const value = React.useMemo(() => {\n    if(multiselect === true) {\n      return selected.map(el => el.key)\n    }\n    return selected.length > 0 ? selected[0].key : null\n  }, [selected])\n\n  React.useEffect(() => {\n    onSelect && onSelect(value)\n  }, [value])\n\n  return (\n    <div\n      ref={containerRef}\n      tabIndex={0}\n      className={styles.customItemSelect}\n      onBlur={() => timeoutBlurRef.current = setTimeout(() => setShow(false), 100)}\n      onFocus={() => clearTimeout(timeoutBlurRef.current)}\n    >\n      <div className={styles.inputContainer}>\n        {selectedComponent}\n        <button className={styles.dropdownButton} onClick={() => setShow(!show)}> <DropdownIcon /></button>\n      </div>\n      <div ref={optionsRef} id=\"optionsContainer\" className={styles.optionsContainer}>\n        {items.map(el => (\n          <Item isSelected={isSelected(el)} key={`item-${el.key}`} onClick={() => {\n            onItemClick(el)\n            if (!multiselect)\n              setShow(false)\n          }} element={el} />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Select from 'custom-item-select'\nimport 'custom-item-select/dist/index.css'\nimport './theme.css'\nimport { Badge, Container, Card } from 'react-bootstrap'\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\n \nSyntaxHighlighter.registerLanguage('javascript', js);\n\nfunction Item({ children }) {\n  return (\n    <Badge variant=\"primary\">\n      {children}\n    </Badge>\n  )\n}\n\nfunction Example({ title, description, children }) {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        {children}\n      </Card.Body>\n    </Card>\n  )\n}\n\nconst items = [\n  { key: \"one\", component: <Item>One</Item> },\n  { key: \"two\", component: <Item>Two</Item> },\n  { key: \"three\", component: <Item>Three</Item> },\n  { key: \"4\", component: <Item>4</Item> },\n  { key: \"5\", component: <Item>5</Item> },\n  { key: \"6\", component: <Item>6</Item> },\n  { key: \"7\", component: <Item>7</Item> },\n  { key: \"8\", component: <Item>8</Item> },\n  { key: \"9\", component: <Item>9</Item> },\n]\n\nfunction SingleSelect() {\n  const [value, setValue] = React.useState()\n  return (\n    <Example\n      title=\"Basic use\"\n      description=\"Standard HTML single-select behaviour with custom item components.\"\n    >\n      Example component as item: <Item>Example</Item>\n      <br/>\n      Value: {value}\n      <br />\n      <Select \n        items={items} \n        onSelect={(key) => setValue(key)} \n        placeholder=\"select one element...\"\n      />\n\n      <SyntaxHighlighter style={docco}>\n       {\n`const [value, setValue] = React.useState();\nconst items = [\n  { key: \"one\", component: <Item>One</Item> },\n  //...\n  { key: \"nine\", component: <Item>Nine</Item> },\n];\nreturn (\n  <Select onSelect={key => setValue(key)} items={items} />\n)`}\n      </SyntaxHighlighter>\n\n    </Example>\n  )\n}\n\nfunction Multiselect() {\n  const [values, setValues] = React.useState()\n  return (\n    <Example\n      title=\"Multiselect\"\n      description=\"\"\n    >\n      Values: {values && values.map(v => `${v}, `)}\n      <br />\n      <Select onSelect={keys => setValues(keys)} multiselect items={items} />\n    </Example>\n  )\n}\n\n\n\nconst App = () => {\n  return (\n    <Container style={{ maxWidth: 600 }}>\n      <SingleSelect />\n      <br />\n      <Multiselect />\n    </Container>\n  )\n\n}\n\nexport default App\n","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}