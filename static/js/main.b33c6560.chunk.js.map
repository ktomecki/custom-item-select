{"version":3,"sources":["../../src/styles.js","../../src/utils.js","../../src/index.js","utils.js","Example1.js","Example2.js","Example3.js","PropsExample.js","Example4.js","App.js","index.js"],"names":["defaultStyles","theme","borderRadiusValue","selectedItemBackground","selectedItemBorder","borderBetween","focusColor","optionsHr","standardBoxShadow","buttonHoverShadow","container","userSelect","maxWidth","inputContainer","boxShadow","selectedItem","minWidth","placeholder","multiselectedItems","itemWrapper","height","margin","wrapperBox","padding","itemEraser","marginTop","marginBottom","fontSize","transform","itemEraserHover","filter","dropdownButton","justifyContent","dropdownIcon","dropdownButtonHover","optionsContainer","border","item","borderBottom","borderTop","position","itemHover","backgroundColor","selectedOption","selectedOptionOverlay","width","top","left","display","selectedOptionIcon","paddingLeft","useHover","React","ref","handleMouseOver","setValue","handleMouseOut","node","DropdownIcon","style","styles","rotate","x","y","viewBox","space","id","points","Context","Iks","xmlns","verticalAlign","data-name","d","fill","stroke","stroke-linecap","stroke-linejoin","stroke-width","useStyles","Item","isSelected","currentStyle","hovered","onClick","e","element","EmptySelector","text","marginLeft","SelectedItem","selected","Array","component","ItemEraser","ItemWrapper","onErase","SelectedItemsArray","el","DropdownButton","useSlide","optionsRef","animationTime","timeoutShowRef","elem","clearTimeout","value","slideDown","setTimeout","slideUp","items","multiselect","internalStyles","createValue","selectedArray","controlled","selectedKeys","action","filtered","key","i","final","index","prev","onSelect","dispatchSelected","type","containerRef","timeoutBlurRef","show","auto","flipTop","flipBottom","setCurrent","checkPosition","screenHeight","window","current","document","useFlip","computedWidth","userWidth","Number","setWidth","useWidth","containerStyle","inputConteinerStyles","minHeight","selectedComponent","onItemClick","tabIndex","onBlur","setShow","onFocus","SyntaxHighlighter","registerLanguage","js","random","min","max","parseInt","Math","PersonBadgeRandomProps","bgColor","color","rgb","avatar","String","fromCharCode","PersonBadge","children","txtColor","isDark","lighten","darken","textStyle","gridTemplateColumns","borderRadius","transformOrigin","textAlign","flexDirection","Example","title","description","Card","Body","Title","Text","Code","docco","rand","exampleItem","useState","values","setValues","map","v","keys","customStyles","Table","striped","bordered","hover","responsive","single","setSingle","join","console","log","length","slice","lastTwoValues","App","Container","target","href","alt","src","PropsExample","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b33c6560.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function defaultTheme() {\r\n    return {\r\n        borderRadiusValue: '5px',\r\n        selectedItemBackground: 'rgb(255, 255, 255)',\r\n        selectedItemBorder: '1px solid rgba(0, 0, 0, 0.2)',\r\n        borderBetween: '1px solid rgba(0, 0, 0, 0.1)',\r\n        focusColor: 'rgba(49, 67, 230, 0.5)',\r\n        optionsHr: '1px solid rgba(0, 0, 0, 0.05)',\r\n        standardBoxShadow: '0px 2px 5px 0px rgba(0, 0, 0, 0.05)',\r\n        buttonHoverShadow: 'inset 0px 0px 5px 0px rgba(0, 0, 0, 0.2)'\r\n    }\r\n}\r\n\r\nexport function defaultStyles(theme = defaultTheme()) {\r\n    return {\r\n        container: {\r\n            \"position\": \"relative\",\r\n            \"display\": \"inline-block\",\r\n            \"borderRadius\": theme.borderRadiusValue,\r\n            userSelect: 'none',\r\n            maxWidth: '100%'\r\n        },\r\n        inputContainer: {\r\n            \"position\": \"relative\",\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"auto 30px\",\r\n            \"borderRadius\": theme.borderRadiusValue,\r\n            boxShadow: theme.standardBoxShadow,\r\n        },\r\n        selectedItem: {\r\n            \"backgroundColor\": theme.selectedItemBackground,\r\n            minWidth: 50,\r\n            \"minHeight\": \"30px\",\r\n            \"display\": \"flex\",\r\n            \"borderTop\": theme.selectedItemBorder,\r\n            \"borderBottom\": theme.selectedItemBorder,\r\n            \"borderLeft\": theme.selectedItemBorder,\r\n            \"borderRadius\": `${theme.borderRadiusValue} 0 0 ${theme.borderRadiusValue}`,\r\n            \"padding\": \"2px\",\r\n            \r\n        },\r\n        placeholder: {\r\n            \"fontSize\": \"0.8rem\",\r\n            \"color\": \"rgba(0, 0, 0, 0.2)\"\r\n        },\r\n        multiselectedItems: {\r\n            \"flexWrap\": \"wrap\"\r\n        },\r\n        itemWrapper: {\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"auto 1fr\",\r\n            height: 'min-content',\r\n            margin: '2px',\r\n            \"backgroundColor\": \"rgba(0, 0, 0, 0.1)\",\r\n            \"borderRadius\": \"4px\",\r\n        },\r\n        wrapperBox: {\r\n            \"display\": \"flex\",\r\n            \"alignItems\": \"center\",\r\n            padding: 2,\r\n        },\r\n        itemEraser: {\r\n            \"display\": \"inline-block\",\r\n            \"paddingLeft\": \"2px\",\r\n            \"paddingRight\": \"2px\",\r\n            \"cursor\": \"pointer\",\r\n            marginTop: 'auto',\r\n            marginBottom: 'auto',\r\n            fontSize: '12px',\r\n            transform: 'translateY(1px)'\r\n        },\r\n        itemEraserHover: {\r\n            filter: 'invert(37%) sepia(99%) saturate(631%) hue-rotate(154deg) brightness(111%) contrast(102%)'\r\n        },\r\n        dropdownButton: {\r\n            \"display\": \"flex\",\r\n            justifyContent: 'center',\r\n            \"border\": \"none\",\r\n            \"margin\": \"0px\",\r\n            \"padding\": \"0px\",\r\n            \"borderRadius\": `0 ${theme.borderRadiusValue} ${theme.borderRadiusValue} 0`,\r\n            \"borderTop\": theme.selectedItemBorder,\r\n            \"borderBottom\": theme.selectedItemBorder,\r\n            \"borderRight\": theme.selectedItemBorder,\r\n            \"borderLeft\": theme.borderBetween,\r\n            \"cursor\": \"pointer\"\r\n        },\r\n        dropdownIcon: {\r\n            margin: 'auto 0'\r\n        },\r\n        dropdownButtonHover: {\r\n            boxShadow: theme.buttonHoverShadow\r\n        },\r\n        optionsContainer: {\r\n            border: theme.selectedItemBorder,\r\n            \"position\": \"absolute\",\r\n            \"backgroundColor\": \"white\",\r\n            \"display\": \"none\",\r\n            \"height\": \"0px\",\r\n            \"maxHeight\": \"250px\",\r\n            \"overflowY\": \"hidden\",\r\n            \"width\": \"100%\",\r\n            \"zIndex\": \"100\",\r\n            \"borderRadius\": `0 0 ${theme.borderRadiusValue} ${theme.borderRadiusValue}`,\r\n            boxShadow: theme.standardBoxShadow\r\n        },\r\n        item: {\r\n            \"padding\": \"2px\",\r\n            \"cursor\": \"pointer\",\r\n            borderBottom: theme.optionsHr,\r\n            borderTop: theme.optionsHr,\r\n            position: 'relative'\r\n        },\r\n        itemHover: {\r\n            filter: 'sepia(20%)',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.08)'\r\n        },\r\n        selectedOption: {\r\n            //\"filter\": \"brightness(30%)\",\r\n            //backgroundColor: 'hsl(0deg, 0%, 60%)'\r\n        },\r\n        selectedOptionOverlay: {\r\n            position: \"absolute\", \r\n            height: '100%', \r\n            width: '100%', \r\n            //backgroundColor: 'rgba(22, 198, 12, 0.5)', \r\n            top: 0, \r\n            left: 0, \r\n            display: 'flex', \r\n            justifyContent: 'center'\r\n        },\r\n        selectedOptionIcon: {\r\n            paddingLeft: '80%', \r\n            marginTop: 'auto', \r\n            marginBottom: 'auto' \r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nexport function useHover() {\r\n    const [value, setValue] = React.useState(false);\r\n    const ref = React.useRef(null);\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n  \r\n    React.useEffect(\r\n      () => {\r\n        const node = ref.current;\r\n        if (node) {\r\n          node.addEventListener('mouseover', handleMouseOver);\r\n          node.addEventListener('mouseout', handleMouseOut);\r\n  \r\n          return () => {\r\n            node.removeEventListener('mouseover', handleMouseOver);\r\n            node.removeEventListener('mouseout', handleMouseOut);\r\n          };\r\n        }\r\n      },\r\n      [ref.current] // Recall only if ref changes\r\n    );\r\n    return [ref, value];\r\n  }\r\n\r\n  export function DropdownIcon({rotate, style}) {\r\n\r\n    const styles = {\r\n      ...style,\r\n      ...(rotate ? {transform: 'rotate(180deg)'} : {})\r\n    }\r\n\r\n    return (\r\n      <svg style={styles} x=\"0px\" y=\"0px\" width=\"10px\" height=\"10px\" viewBox=\"0 0 255 255\" space=\"preserve\">\r\n        <g>\r\n          <g id=\"arrow-drop-down\">\r\n            <polygon points=\"0,63.75 127.5,191.25 255,63.75\" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    )\r\n  }","import React from 'react'\r\nimport { defaultStyles, defaultTheme } from './styles'\r\nimport { DropdownIcon, useHover } from './utils'\r\n\r\nexport { defaultStyles, defaultTheme }\r\n\r\nconst Context = React.createContext({ styles: {} })\r\n\r\nfunction Iks() {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{verticalAlign: 'inherit'}} width=\"11.351\" height=\"11.351\" viewBox=\"0 0 11.351 11.351\">\r\n      <path id=\"Union_1\" data-name=\"Union 1\" d=\"M4.675,4.675,0,.127,4.675,4.675,9.224,0,4.675,4.675,9.351,9.224,4.675,4.675.127,9.351Z\" transform=\"translate(1 1)\" fill=\"none\" stroke=\"#707070\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"/>\r\n    </svg>\r\n  )\r\n}\r\n\r\nfunction useStyles() {\r\n  const { styles } = React.useContext(Context)\r\n  return styles\r\n}\r\n\r\nfunction Item({ element, onClick, isSelected }) {\r\n  const { item, selectedOption, itemHover, selectedOptionOverlay, selectedOptionIcon } = useStyles()\r\n  const [ref, hovered] = useHover()\r\n\r\n  const currentStyle = {\r\n    ...item,\r\n    ...(isSelected ? selectedOption : {}),\r\n    ...(hovered ? itemHover : {})\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} onClick={(e) => onClick(e)} style={currentStyle}>\r\n      {element.component}\r\n      {isSelected && (\r\n        <div style={selectedOptionOverlay}>\r\n          <div style={selectedOptionIcon}>✅</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction EmptySelector({ text }) {\r\n  const { placeholder, selectedItem } = useStyles()\r\n  return (\r\n    <div style={{ ...selectedItem, ...placeholder }}>\r\n      <div style={{ marginTop: 'auto', marginBottom: 'auto', marginLeft: 3 }}>\r\n        {text}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction SelectedItem({ selected, placeholder }) {\r\n  const { selectedItem } = useStyles()\r\n  if (selected == null || !Array.isArray(selected) || selected.length !== 1)\r\n    return <EmptySelector text={placeholder} />\r\n\r\n  const component = selected[0].component\r\n\r\n  return (\r\n    <div style={selectedItem}>\r\n      <div style={{ marginTop: 'auto', marginBottom: 'auto' }}>\r\n        {component}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemEraser({ onClick }) {\r\n  const { itemEraser, itemEraserHover } = useStyles()\r\n  const [ref, hovered] = useHover()\r\n\r\n  const currentStyle = {\r\n    ...itemEraser,\r\n    ...(hovered ? itemEraserHover : {})\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} onClick={onClick} style={currentStyle}>\r\n      <Iks/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ItemWrapper({ children, onErase }) {\r\n  const { itemWrapper, wrapperBox } = useStyles()\r\n  return (\r\n    <div style={{margin: 'auto 0'}}>\r\n      <div style={itemWrapper}>\r\n        <div style={wrapperBox}>\r\n          {children}\r\n        </div>\r\n\r\n        <ItemEraser onClick={onErase} />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction SelectedItemsArray({ selected, onErase, placeholder }) {\r\n  const { selectedItem, multiselectedItems } = useStyles()\r\n  if (selected == null || !Array.isArray(selected) || selected.length === 0)\r\n    return <EmptySelector text={placeholder} />\r\n\r\n  return (\r\n    <div style={{ ...selectedItem, ...multiselectedItems }}>\r\n      {selected.map(el => (\r\n        <ItemWrapper onErase={() => onErase(el)}>{el.component}</ItemWrapper>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction DropdownButton({ onClick, rotate }) {\r\n  const [ref, hovered] = useHover()\r\n  const { dropdownButton, dropdownButtonHover, dropdownIcon } = useStyles()\r\n\r\n  const currentStyle = {\r\n    ...dropdownButton,\r\n    ...(hovered ? dropdownButtonHover : {})\r\n  }\r\n\r\n  return (\r\n    <button ref={ref} style={currentStyle} onClick={onClick}>\r\n      <DropdownIcon style={dropdownIcon} rotate={rotate} />\r\n    </button>\r\n  )\r\n}\r\n\r\nfunction useWidth(optionsRef, userWidth) {\r\n  const [[width, isAuto], setWidth] = React.useReducer((prev, value) => {\r\n    if (value === 'auto') {\r\n      return [null, true]\r\n    }\r\n    if (Number.isInteger(value)) {\r\n      return [value, false]\r\n    }\r\n    return [null, false]\r\n  }, [50, false])\r\n\r\n  React.useEffect(() => {\r\n    setWidth(userWidth)\r\n  }, [userWidth])\r\n\r\n  React.useEffect(() => {\r\n    if (optionsRef.current == null)\r\n      return\r\n    if (!isAuto)\r\n      return\r\n\r\n    const elem = optionsRef.current\r\n\r\n    elem.style.visibility = 'hidden'\r\n    elem.style.display = 'block'\r\n    setTimeout(() => {\r\n      setWidth(elem.scrollWidth)\r\n      elem.style.display = 'none'\r\n      elem.style.visibility = 'visible'\r\n    })\r\n  }, [optionsRef.current])\r\n\r\n  return width\r\n}\r\n\r\nfunction useSlide(optionsRef, animationTime) {\r\n\r\n  const slideDown = (elem) => {\r\n    elem.style.display = 'block'\r\n    elem.style.transition = `height, ${animationTime}s linear`\r\n    elem.style.height = `${elem.scrollHeight}px`;\r\n    timeoutShowRef.current = setTimeout(() => {\r\n      elem.style[\"overflow-y\"] = \"auto\";\r\n    }, animationTime * 1000.0)\r\n  }\r\n\r\n  const slideUp = (elem) => {\r\n    elem.style[\"overflow-y\"] = \"hidden\";\r\n    elem.style.transition = `height, ${animationTime}s linear`\r\n    elem.style.height = `0px`;\r\n    timeoutShowRef.current = setTimeout(() => {\r\n      elem.style.display = \"none\";\r\n    }, animationTime * 1000.0)\r\n  }\r\n\r\n  const timeoutShowRef = React.useRef()\r\n\r\n  const [show, setShow] = React.useReducer((s, value) => {\r\n    clearTimeout(timeoutShowRef.current)\r\n\r\n    if (value === true) {\r\n      slideDown(optionsRef.current);\r\n    }\r\n    else {\r\n      slideUp(optionsRef.current)\r\n    }\r\n\r\n    return value\r\n  }, false)\r\n\r\n  return [show, setShow]\r\n}\r\n\r\nfunction useFlip(optionsRef, show, position = 'bottom', auto = true) {\r\n\r\n  const flipTop = (elem) => {\r\n    elem.style.transformOrigin = 'bottom'\r\n    elem.style.top = 'unset'\r\n    elem.style.bottom = '100%'\r\n  }\r\n\r\n  const flipBottom = (elem) => {\r\n    elem.style.transform = ''\r\n    elem.style.bottom = 'unset'\r\n    elem.style.top = 'unset'\r\n  }\r\n\r\n  const [current, setCurrent] = React.useState(position)\r\n  React.useEffect(() => setCurrent(position), [position])\r\n\r\n  const checkPosition = () => {\r\n    if (optionsRef.current == null)\r\n      return\r\n\r\n    if (show !== true)\r\n      return\r\n\r\n    const y = optionsRef.current.parentElement.getBoundingClientRect().top\r\n    const screenHeight = window.innerHeight\r\n    const height = optionsRef.current.scrollHeight\r\n\r\n    if (y + height + 100 > screenHeight && y - height > 0) {\r\n      if (current != 'top')\r\n        setCurrent('top')\r\n    } else if (y + height - 100 < screenHeight) {\r\n      if (current != 'bottom')\r\n        setCurrent('bottom')\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (optionsRef.current == null)\r\n      return\r\n    if (show !== true)\r\n      return\r\n\r\n    switch (current) {\r\n      case 'bottom': return flipBottom(optionsRef.current);\r\n      case 'top': return flipTop(optionsRef.current)\r\n    }\r\n  }, [optionsRef.current, show, current])\r\n\r\n  React.useEffect(() => {\r\n    if (optionsRef.current == null)\r\n      return\r\n    if (auto !== true)\r\n      return\r\n\r\n    checkPosition()\r\n    document.addEventListener('scroll', checkPosition)\r\n    return () => {\r\n      document.removeEventListener('scroll', checkPosition)\r\n    }\r\n  }, [optionsRef.current, auto, show, current])\r\n\r\n}\r\n\r\nexport default function ({\r\n  width,\r\n  onSelect,\r\n  selectedKeys,\r\n  items = [],\r\n  multiselect = false,\r\n  placeholder,\r\n  internalStyles = defaultStyles(),\r\n  animationTime = 0.2,\r\n  style = {},\r\n  height\r\n}) {\r\n\r\n  const createValue = (selectedArray) => {\r\n    if (multiselect === true) {\r\n      return selectedArray.map(el => el.key)\r\n    }\r\n    return selectedArray.length > 0 ? selectedArray[0].key : null\r\n  }\r\n\r\n  const controlled = (selectedKeys != null && (multiselect === true && Array.isArray(selectedKeys) || (multiselect === false && (typeof selectedKeys === 'string' || selectedKeys instanceof String))))\r\n\r\n  const [selected, dispatchSelected] = React.useReducer((prev, action) => {\r\n    switch (action.type) {\r\n      case 'reset': {\r\n        if (controlled) {\r\n          const filtered = multiselect ?\r\n            selectedKeys.map(key => items.find(i => i.key == key)).filter(el => el != null) :\r\n            [items.find(i => i.key == selectedKeys)]\r\n          return { final: filtered, value: createValue(filtered) }\r\n        }\r\n        return prev\r\n      }\r\n\r\n      case 'erase': {\r\n        const key = action.key\r\n        const index = prev.final.findIndex(el => el.key === key)\r\n        if (index == null)\r\n          return prev\r\n\r\n        const final = [...prev.final]\r\n        final.splice(index, 1)\r\n        const value = createValue(final)\r\n        onSelect && onSelect(value)\r\n        return controlled ? prev : { final, value }\r\n      }\r\n\r\n      case 'select': {\r\n        const final = multiselect ? [...prev.final, action.element] : [action.element]\r\n        const value = createValue(final)\r\n        onSelect && onSelect(value)\r\n        return controlled ? prev : { final, value }\r\n      }\r\n    }\r\n  }, { final: [], value: [] })\r\n\r\n  React.useEffect(() => {\r\n    dispatchSelected({ type: 'reset' })\r\n  }, [selectedKeys])\r\n\r\n\r\n  const optionsRef = React.useRef()\r\n  const containerRef = React.useRef()\r\n  const timeoutBlurRef = React.useRef()\r\n\r\n  const [show, setShow] = useSlide(optionsRef, animationTime)\r\n\r\n  useFlip(optionsRef, show)\r\n  const computedWidth = useWidth(optionsRef, width)\r\n  const containerStyle = {\r\n    ...internalStyles.container,\r\n    ...(Number.isInteger(computedWidth) ? { width: multiselect ? computedWidth + 100 : computedWidth + 100 } : {}),\r\n    ...style\r\n  }\r\n\r\n  const inputConteinerStyles = {\r\n    ...internalStyles.inputContainer,\r\n    ...(height != null && Number.isInteger(height) ? { minHeight: `${height}px` } : {})\r\n  }\r\n\r\n\r\n  const onErase = (element) => {\r\n    dispatchSelected({ type: 'erase', key: element.key })\r\n  }\r\n\r\n  const selectedComponent = React.useMemo(() => {\r\n    return multiselect === true ?\r\n      <SelectedItemsArray placeholder={placeholder} onErase={onErase} selected={selected.final} /> :\r\n      <SelectedItem placeholder={placeholder} selected={selected.final} />\r\n  }, [selected.final, multiselect])\r\n\r\n  const isSelected = React.useCallback((element) => {\r\n    return selected.final.find(el => el.key == element.key) != null\r\n  }, [selected.final])\r\n\r\n  const onItemClick = React.useCallback((element, e) => {\r\n    if (isSelected(element))\r\n      return onErase(element)\r\n    dispatchSelected({ type: 'select', element })\r\n  }, [selected, multiselect])\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        styles: internalStyles,\r\n        computedWidth\r\n      }}\r\n    >\r\n      <div\r\n        ref={containerRef}\r\n        tabIndex={0}\r\n        style={containerStyle}\r\n        onBlur={() => timeoutBlurRef.current = setTimeout(() => setShow(false), 100)}\r\n        onFocus={() => clearTimeout(timeoutBlurRef.current)}\r\n      >\r\n        <div style={inputConteinerStyles}>\r\n          {selectedComponent}\r\n          <DropdownButton onClick={() => setShow(!show)} rotate={show} />\r\n        </div>\r\n        <div ref={optionsRef} id=\"optionsContainer\" style={internalStyles.optionsContainer}>\r\n          {items.map(el => (\r\n            <Item isSelected={isSelected(el)} key={`item-${el.key}`} onClick={() => {\r\n              onItemClick(el)\r\n              if (!multiselect)\r\n                setShow(false)\r\n            }} element={el} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Context.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Select from 'custom-item-select'\r\nimport 'custom-item-select/dist/index.css'\r\nimport './theme.css'\r\nimport { Badge, Container, Card } from 'react-bootstrap'\r\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\r\nimport color from 'color'\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst random = (min, max) => {\r\n    return parseInt((max - min) * Math.random() + min)\r\n}\r\n\r\nexport function Item({ children }) {\r\n    return (\r\n        <Badge variant=\"primary\">\r\n            {children}\r\n        </Badge>\r\n    )\r\n}\r\n\r\nexport function PersonBadgeRandomProps() {\r\n    return {\r\n        bgColor: color.rgb(random(50, 200), random(50, 200), random(50, 200)),\r\n        avatar: String.fromCharCode(random(65, 90))\r\n    }\r\n}\r\n\r\nexport function PersonBadge({ children, bgColor, avatar }) {\r\n\r\n    const txtColor = bgColor.isDark() ? bgColor.lighten(0.8) : bgColor.darken(0.8)\r\n    \r\n    const containerStyle = {\r\n        \"display\": \"inline-block\",\r\n        \"padding\": \".25em .8em\",\r\n        \"fontSize\": \"75%\",\r\n        \"fontWeight\": \"700\",\r\n        \"lineHeight\": \"1\",\r\n        \"textAlign\": \"center\",\r\n        \"whiteSpace\": \"nowrap\",\r\n        \"verticalAlign\": \"baseline\",\r\n        \"borderRadius\": \".25rem\",\r\n        backgroundColor: bgColor,\r\n        color: 'white',\r\n        margin: 5,\r\n\r\n    }\r\n\r\n    const gridStyle = {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'auto 2fr'\r\n    }\r\n\r\n    const avatarContainerStyle = {\r\n        height: 20,\r\n        width: 20,\r\n        borderRadius: 15,\r\n        boxShadow: '0 0 5px 0 rgba(0, 0, 0, 0.2)',\r\n        transformOrigin: 'center',\r\n        transform: 'scale(1.5)',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        \"fontSize\": \"75%\",\r\n        \"fontWeight\": \"100\",\r\n        \"lineHeight\": \"1\",\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        padding: 0,\r\n    }\r\n\r\n    const textStyle = {\r\n        marginLeft: 10,\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        color: txtColor\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <div style={gridStyle}>\r\n                <div style={avatarContainerStyle}>\r\n                    <span style={{}}>\r\n                        {avatar}\r\n                    </span>\r\n                </div>\r\n                <div style={textStyle}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Example({ title, description, children }) {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text>{description}</Card.Text>\r\n                {children}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function Code({ children }) {\r\n    return (\r\n        <SyntaxHighlighter style={docco}>\r\n            {children}\r\n        </SyntaxHighlighter>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Select from 'custom-item-select'\r\nimport { Badge, Container, Card } from 'react-bootstrap'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n    { key: \"Ana\", component: <PersonBadge {...rand()}>Ana</PersonBadge> },\r\n    { key: \"Bentha\", component: <PersonBadge {...rand()}>Bentha</PersonBadge> },\r\n    { key: \"Val\", component: <PersonBadge {...rand()}>Val</PersonBadge> },\r\n    { key: \"Ingo\", component: <PersonBadge {...rand()}>Ingo</PersonBadge> },\r\n    { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n    { key: \"Naria\", component: <PersonBadge {...rand()}>Naria</PersonBadge> },\r\n    { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nconst exampleItem = <PersonBadge {...rand()}>Misou</PersonBadge>\r\n\r\nexport default function() {\r\n    const [value, setValue] = React.useState()\r\n    return (\r\n      <Example\r\n        title=\"Basic useage\"\r\n        description=\"Standard HTML single-select behaviour with custom item components.\"\r\n      >\r\n        Example component as item: {exampleItem}\r\n        <br />\r\n        Value: {value}\r\n        <br />\r\n        <Select\r\n          items={items}\r\n          onSelect={(key) => setValue(key)}\r\n          placeholder=\"select one element...\"\r\n          width='auto'\r\n          height={40}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select from 'custom-item-select'\r\n//...\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  //...\r\n  { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nfunction() {\r\n  const [values, setValues] = React.useState()\r\n  return (\r\n    <Select\r\n      items={items}\r\n      onSelect={(key) => setValue(key)}\r\n      placeholder=\"select one element...\"\r\n    />\r\n  )\r\n}\r\n\r\n`}\r\n      </Code>\r\n      </Example>\r\n    )\r\n  }","import React from 'react'\r\nimport Select from 'custom-item-select'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n  { key: \"Ana\", component: <PersonBadge {...rand()}>Ana</PersonBadge> },\r\n  { key: \"Bentha\", component: <PersonBadge {...rand()}>Bentha</PersonBadge> },\r\n  { key: \"Val\", component: <PersonBadge {...rand()}>Val</PersonBadge> },\r\n  { key: \"Ingo\", component: <PersonBadge {...rand()}>Ingo</PersonBadge> },\r\n  { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n  { key: \"Naria\", component: <PersonBadge {...rand()}>Naria</PersonBadge> },\r\n  { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n  const [values, setValues] = React.useState()\r\n  return (\r\n    <Example\r\n      title=\"Multiselect\"\r\n      description=\"\"\r\n    >\r\n      Values: {values && values.map(v => `${v}, `)}\r\n      <br />\r\n      <div>\r\n        <Select\r\n          multiselect\r\n          onSelect={keys => setValues(keys)}\r\n          items={items}\r\n          width='auto'\r\n          height={80}\r\n          placeholder=\"select multiple options\"\r\n        />\r\n      </div>\r\n      <br/>\r\n      <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select from 'custom-item-select'\r\n//...\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  //...\r\n  { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nfunction() {\r\n  const [values, setValues] = React.useState()\r\n  return (\r\n    <Select \r\n      multiselect\r\n      onSelect={keys => setValues(keys)}  \r\n      items={items} \r\n      width='auto'\r\n      placeholder=\"select multiple options\"\r\n    />\r\n  )\r\n}\r\n\r\n`}\r\n      </Code>\r\n\r\n    </Example>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Select, { defaultStyles, defaultTheme } from 'custom-item-select'\r\nimport { Badge, Container, Card } from 'react-bootstrap'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n  const theme = defaultTheme()\r\n  theme.selectedItemBackground = 'rgb(50, 100, 200)'\r\n  theme.standardBoxShadow = '0px 0px 5px 0px rgba(50, 150, 200, 0.4)'\r\n\r\n  const customStyles = defaultStyles()\r\n  customStyles.dropdownButton.backgroundColor = 'rgba(0, 50, 200, 0.5)'\r\n\r\n  return (\r\n    <Example\r\n      title=\"Theming\"\r\n      description=\"\"\r\n    >\r\n      <code>style</code> prop modifies main container style.\r\n      <Select\r\n        style={{ display: 'block', margin: 20 }}\r\n        items={items}\r\n      />\r\n\r\n      <Code>\r\n        {\r\n          `\r\n//...\r\nfunction() {\r\n    return (\r\n      <Select\r\n        style={{ display: 'block', margin: 20 }}\r\n        items={items}\r\n      />\r\n    )\r\n}\r\n\r\n`}\r\n      </Code>\r\n      \r\n      <br />\r\n      <hr/>\r\n      <br />\r\n        Use <code>defaultTheme</code> function to get and modify theme default values, for example changing the background color.\r\n        Based on modified theme object, create custom internal styles and pass it to <code>internalStyles</code> prop.\r\n        <br />\r\n        <br/>\r\n      <Select\r\n        internalStyles={defaultStyles(theme)}\r\n        items={items}\r\n        placeholder=\"select one element...\"\r\n      />\r\n      <br /><br />\r\n      <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select, {defaultStyles, defaultTheme} from 'custom-item-select'\r\n//...\r\nfunction() {\r\n    const theme = defaultTheme()\r\n    theme.selectedItemBackground = 'rgb(0, 50, 200)'\r\n    theme.standardBoxShadow = '0px 0px 5px 0px rgba(0, 50, 200, 0.4)'\r\n    return (\r\n        <Select\r\n            internalStyles={defaultStyles(theme)}\r\n            items={items}\r\n        />\r\n    )\r\n}\r\n\r\n`}\r\n      </Code>\r\n      \r\n      <br />\r\n      <hr/>\r\n      <br />\r\n\r\n        You can also modify all internal components styles:<br />\r\n        <br/>\r\n      <Select\r\n        internalStyles={customStyles}\r\n        items={items}\r\n        placeholder=\"select one element...\"\r\n      />\r\n      <br />\r\n      <br/>\r\n      <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select, {defaultStyles, defaultTheme} from 'custom-item-select'\r\n//...\r\nfunction() {\r\n    const customStyles = defaultStyles()\r\n    customStyles.dropdownButton.backgroundColor = 'rgba(0, 50, 200, 0.5)'\r\n    return (\r\n        <Select\r\n            internalStyles={customStyles}\r\n            items={items}\r\n        />\r\n    )\r\n}\r\n\r\n`}\r\n      </Code>\r\n    </Example>\r\n  )\r\n}","import React from 'react'\r\nimport Select, { defaultStyles, defaultTheme } from 'custom-item-select'\r\nimport { Badge, Container, Card, Table } from 'react-bootstrap'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n    const theme = defaultTheme()\r\n    theme.selectedItemBackground = 'rgb(50, 100, 200)'\r\n    theme.standardBoxShadow = '0px 0px 5px 0px rgba(50, 150, 200, 0.4)'\r\n\r\n    const customStyles = defaultStyles()\r\n    customStyles.dropdownButton.backgroundColor = 'rgba(0, 50, 200, 0.5)'\r\n\r\n    return (\r\n        <Example\r\n            title=\"Props\"\r\n            description=\"\"\r\n        >\r\n            <Table striped bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Prop</th>\r\n                        <th>Default</th>\r\n                        <th>Values</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>items</td>\r\n                        <td><code>{\"[]\"}</code></td>\r\n                        <td>\r\n                            Array with objects as select options:\r\n                            <br />\r\n                            <Code>\r\n                                {`[\r\n    {key: 'key1', component: <CustomItemComponent/>},\r\n    {key: 'key2', component: <WhateverComponent/>}}\r\n]\r\n`}\r\n                            </Code>\r\n                        </td>\r\n                        <td>Keys must be unique, Components may be same or different types.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>multiselect</td>\r\n                        <td>false</td>\r\n                        <td>\r\n                            <code>true | false</code>\r\n                        </td>\r\n                        <td>\r\n                            If <code>true</code> you can select multiple options.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>placeholder</td>\r\n                        <td><code>null</code></td>\r\n                        <td>\r\n                            <code>null | string</code>\r\n                        </td>\r\n                        <td>\r\n                            The text if nothing is selected.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>internalStyles</td>\r\n                        <td>\r\n                            <code>defaultStyles()</code>\r\n                        </td>\r\n                        <td>\r\n                            You can get and modify the object with styles by:\r\n                            <Code>\r\n                                {`\r\nimport { defaultStyles } from 'custom-item-select'  \r\n//...\r\nconst styles = defaultStyles()\r\n`}\r\n                            </Code>\r\n                        </td>\r\n                        <td>\r\n                            By this object all internal components are styled.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onSelect</td>\r\n                        <td><code>null</code></td>\r\n                        <td>\r\n                            If multiselect is <code>false</code>:<br />\r\n                            <code>{\"(selectedKey) => { /*...*/ }\"}</code><br />\r\n                            If multiselect is <code>true</code>:<br />\r\n                            <code>{\"(allSelectedKeysArray) => { /*...*/ }\"}</code>\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>animationTime</td>\r\n                        <td><code>0.2</code> [sec]</td>\r\n                        <td>Numeric value</td>\r\n                        <td>Time of slide up/down animation</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>width</td>\r\n                        <td>null</td>\r\n                        <td><code>{'null | \"auto\" | numeric value'}</code></td>\r\n                        <td>\r\n                            Defines width of component.<br/>\r\n                            If <code>null</code>, width is defined by internalStyles and style prop.\r\n                            <br /><br/>\r\n                            If <code>{'auto'}</code>, width is computed to contain all items in options\r\n                            <br/><br/>\r\n                            Use numeric value to set width to main component style.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>height</td>\r\n                        <td>null</td>\r\n                        <td><code>{'null | numeric value'}</code></td>\r\n                        <td>\r\n                            Defines min height of component.<br/>\r\n                            If <code>null</code>, height is defined by internalStyles.\r\n                            <br /><br/>\r\n                            Use numeric value to set min height to container of selected options.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>selectedKeys</td>\r\n                        <td>null</td>\r\n                        <td>\r\n                            <code>{`null`}</code><br/>\r\n                            <code>{`[array_with_keys]`}</code>  if multiselect<br/>\r\n                            <code>{`\"string key\"`}</code> if singleselect\r\n                        </td>\r\n                        <td>\r\n                            If not null - selected items are controlled by this prop.<br/>\r\n                            <br/>\r\n                            If <code>null</code>, selected items are stored inside Select component. You can still track changes by <code>onSelect</code> event prop.\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </Example>\r\n    )\r\n}","import React from 'react'\r\nimport Select from 'custom-item-select'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n    { key: \"Ana\", component: <PersonBadge {...rand()}>Ana</PersonBadge> },\r\n    { key: \"Bentha\", component: <PersonBadge {...rand()}>Bentha</PersonBadge> },\r\n    { key: \"Val\", component: <PersonBadge {...rand()}>Val</PersonBadge> },\r\n    { key: \"Ingo\", component: <PersonBadge {...rand()}>Very long Name: IngoIngoIngo</PersonBadge> },\r\n    { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n    { key: \"Naria\", component: <PersonBadge {...rand()}>Naria</PersonBadge> },\r\n    { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n    const [values, setValues] = React.useState([\"Zuk\"])\r\n    const [single, setSingle] = React.useState(\"Zuk\")\r\n\r\n    const lastTwoValues = (keys) => {\r\n        console.log(keys)\r\n        setValues(keys.length > 2 ? keys.slice(-2) : keys)\r\n    }\r\n\r\n    return (\r\n        <Example\r\n            title=\"Controlled\"\r\n            description=\"You can control current selected items by passing array with keys to selectedKeys prop.\"\r\n        >\r\n            \r\n            <br />\r\n            <div>\r\n                <b>Multiselect</b> values: {values && values.join()}<br/>\r\n                <Select\r\n                    multiselect\r\n                    onSelect={keys => lastTwoValues(keys)}\r\n                    selectedKeys={values}\r\n                    items={items}\r\n                    width='auto'\r\n                    placeholder=\"select multiple options\"\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <b>Singleselect</b> value: {single}<br/>\r\n                <Select\r\n                    onSelect={key => setSingle(key)}\r\n                    selectedKeys={single}\r\n                    items={items}\r\n                    width='auto'\r\n                    placeholder=\"select multiple options\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <br/>\r\n            <Code>\r\n                {\r\n                    `\r\nimport React from 'react'\r\nimport Select from 'custom-item-select'\r\n//...\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    //...\r\n    { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n]\r\n                    \r\nfunction() {\r\n    const [values, setValues] = React.useState([\"Zuk\"])\r\n    const [single, setSingle] = React.useState(\"Zuk\")\r\n\r\n    const lastTwoValues = (keys) => {\r\n        console.log(keys)\r\n        setValues(keys.length > 2 ? keys.slice(-2) : keys)\r\n    }\r\n\r\n    return (\r\n        <b>Multiselect</b> values: {values && values.join()}<br/>\r\n        <Select\r\n            multiselect\r\n            onSelect={keys => lastTwoValues(keys)}\r\n            selectedKeys={values}\r\n            items={items}\r\n            width='auto'\r\n            placeholder=\"select multiple options\"\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <b>Singleselect</b> value: {single}<br/>\r\n        <Select\r\n            onSelect={key => setSingle(key)}\r\n            selectedKeys={single}\r\n            items={items}\r\n            width='auto'\r\n            placeholder=\"select multiple options\"\r\n        />\r\n    )\r\n}\r\n                    `\r\n                }\r\n            </Code>\r\n        </Example>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport SingleSelect from './Example1'\r\nimport Multiselect from './Example2'\r\nimport Theming from './Example3'\r\nimport PropsExample from './PropsExample'\r\nimport Controlled from './Example4'\r\n\r\n//TODO:\r\n// Props explanation,\r\n// Compare behaviour to HTML select,\r\n// Descriptions and texts,\r\n// Different components in one select,\r\n// Deal with forms\r\n\r\nconst App = () => {\r\n  const [value, setValue] = React.useState(\"1\")\r\n  return (\r\n    <Container style={{ maxWidth: 1200 }}>\r\n      <h1><b>custom-item-select</b> demo</h1>\r\n      <a target=\"_blank\" href=\"https://github.com/ktomecki/custom-item-select\">GitHub</a>\r\n      {\" | \"}\r\n      <a target=\"_blank\" href=\"https://www.npmjs.com/package/custom-item-select\" alt=\"NPM\"><img src=\"https://img.shields.io/npm/v/custom-item-select.svg\"/></a>\r\n      <br/>\r\n      <br/>\r\n      <SingleSelect />\r\n      <br />\r\n      <Multiselect />\r\n      <br/>\r\n      <Controlled/>\r\n      <br/>\r\n      <PropsExample/>\r\n      <br/>\r\n      <Theming/>\r\n      <br/>     \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}