{"version":3,"sources":["../../src/styles.js","../../src/utils.js","../../src/index.js","utils.js","Example1.js","Example2.js","Example3.js","PropsExample.js","Example4.js","App.js","index.js"],"names":["defaultStyles","theme","borderRadiusValue","selectedItemBackground","selectedItemBorder","borderBetween","focusColor","optionsHr","standardBoxShadow","buttonHoverShadow","container","userSelect","inputContainer","boxShadow","selectedItem","minWidth","placeholder","multiselectedItems","itemWrapper","height","margin","wrapperBox","padding","itemEraser","marginTop","marginBottom","fontSize","itemEraserHover","filter","dropdownButton","justifyContent","dropdownIcon","dropdownButtonHover","optionsContainer","item","borderBottom","borderTop","position","itemHover","backgroundColor","selectedOption","selectedOptionOverlay","width","top","left","display","selectedOptionIcon","paddingLeft","useHover","React","ref","handleMouseOver","setValue","handleMouseOut","node","DropdownIcon","style","styles","rotate","transform","x","y","viewBox","space","id","points","Context","useStyles","Item","isSelected","currentStyle","hovered","onClick","e","element","EmptySelector","text","marginLeft","SelectedItem","selected","Array","component","ItemEraser","ItemWrapper","onErase","SelectedItemsArray","el","DropdownButton","useSlide","optionsRef","animationTime","timeoutShowRef","elem","clearTimeout","value","slideDown","setTimeout","slideUp","items","multiselect","internalStyles","createValue","selectedArray","controlled","selectedKeys","action","filtered","key","i","final","index","prev","onSelect","dispatchSelected","type","containerRef","timeoutBlurRef","show","auto","flipTop","flipBottom","setCurrent","checkPosition","screenHeight","window","current","document","useFlip","computedWidth","userWidth","Number","setWidth","useWidth","containerStyle","inputConteinerStyles","minHeight","selectedComponent","onItemClick","tabIndex","onBlur","setShow","onFocus","SyntaxHighlighter","registerLanguage","js","random","min","max","parseInt","Math","PersonBadgeRandomProps","bgColor","color","rgb","avatar","String","fromCharCode","PersonBadge","children","txtColor","isDark","lighten","darken","textStyle","gridTemplateColumns","borderRadius","transformOrigin","textAlign","flexDirection","Example","title","description","Card","Body","Title","Text","Code","docco","rand","exampleItem","useState","values","setValues","map","v","keys","customStyles","Table","striped","bordered","hover","responsive","single","setSingle","join","console","log","length","slice","lastTwoValues","App","Container","maxWidth","target","href","alt","src","PropsExample","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.395b7dc1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function defaultTheme() {\r\n    return {\r\n        borderRadiusValue: '5px',\r\n        selectedItemBackground: 'rgb(255, 255, 255)',\r\n        selectedItemBorder: '1px solid rgba(0, 0, 0, 0.2)',\r\n        borderBetween: '1px solid rgba(0, 0, 0, 0.1)',\r\n        focusColor: 'rgba(49, 67, 230, 0.5)',\r\n        optionsHr: '1px solid rgba(0, 0, 0, 0.05)',\r\n        standardBoxShadow: '0px 0px 5px 0px rgba(0, 0, 0, 0.2)',\r\n        buttonHoverShadow: 'inset 0px 0px 5px 0px rgba(0, 0, 0, 0.2)'\r\n    }\r\n}\r\n\r\nexport function defaultStyles(theme = defaultTheme()) {\r\n    return {\r\n        container: {\r\n            \"position\": \"relative\",\r\n            \"display\": \"inline-block\",\r\n            \"borderRadius\": theme.borderRadiusValue,\r\n            userSelect: 'none'\r\n        },\r\n        inputContainer: {\r\n            \"position\": \"relative\",\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"auto 30px\",\r\n            \"borderRadius\": theme.borderRadiusValue,\r\n            boxShadow: theme.standardBoxShadow,\r\n        },\r\n        selectedItem: {\r\n            \"backgroundColor\": theme.selectedItemBackground,\r\n            minWidth: 50,\r\n            \"minHeight\": \"30px\",\r\n            \"display\": \"flex\",\r\n            \"borderTop\": theme.selectedItemBorder,\r\n            \"borderBottom\": theme.selectedItemBorder,\r\n            \"borderLeft\": theme.selectedItemBorder,\r\n            \"borderRadius\": `${theme.borderRadiusValue} 0 0 ${theme.borderRadiusValue}`,\r\n            \"padding\": \"2px\",\r\n            \r\n        },\r\n        placeholder: {\r\n            \"fontSize\": \"0.8rem\",\r\n            \"color\": \"rgba(0, 0, 0, 0.2)\"\r\n        },\r\n        multiselectedItems: {\r\n            \"flexWrap\": \"wrap\"\r\n        },\r\n        itemWrapper: {\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"auto 1fr\",\r\n            height: 'min-content',\r\n            margin: '2px',\r\n            \"backgroundColor\": \"rgba(0, 0, 0, 0.1)\",\r\n            \"borderRadius\": \"4px\",\r\n        },\r\n        wrapperBox: {\r\n            \"display\": \"flex\",\r\n            \"alignItems\": \"center\",\r\n            padding: 2,\r\n        },\r\n        itemEraser: {\r\n            \"display\": \"inline-block\",\r\n            \"paddingLeft\": \"2px\",\r\n            \"paddingRight\": \"2px\",\r\n            \"cursor\": \"pointer\",\r\n            marginTop: 'auto',\r\n            marginBottom: 'auto',\r\n            fontSize: '12px',\r\n        },\r\n        itemEraserHover: {\r\n            filter: 'invert(37%) sepia(99%) saturate(631%) hue-rotate(154deg) brightness(111%) contrast(102%)'\r\n        },\r\n        dropdownButton: {\r\n            \"display\": \"flex\",\r\n            justifyContent: 'center',\r\n            \"border\": \"none\",\r\n            \"margin\": \"0px\",\r\n            \"padding\": \"0px\",\r\n            \"borderRadius\": `0 ${theme.borderRadiusValue} ${theme.borderRadiusValue} 0`,\r\n            \"borderTop\": theme.selectedItemBorder,\r\n            \"borderBottom\": theme.selectedItemBorder,\r\n            \"borderRight\": theme.selectedItemBorder,\r\n            \"borderLeft\": theme.borderBetween,\r\n            \"cursor\": \"pointer\"\r\n        },\r\n        dropdownIcon: {\r\n            margin: 'auto 0'\r\n        },\r\n        dropdownButtonHover: {\r\n            boxShadow: theme.buttonHoverShadow\r\n        },\r\n        optionsContainer: {\r\n            \"position\": \"absolute\",\r\n            \"backgroundColor\": \"white\",\r\n            \"display\": \"none\",\r\n            \"height\": \"0px\",\r\n            \"maxHeight\": \"250px\",\r\n            \"overflowY\": \"hidden\",\r\n            \"width\": \"100%\",\r\n            \"zIndex\": \"100\",\r\n            \"borderRadius\": `0 0 ${theme.borderRadiusValue} ${theme.borderRadiusValue}`,\r\n            boxShadow: theme.standardBoxShadow\r\n        },\r\n        item: {\r\n            \"padding\": \"2px\",\r\n            \"cursor\": \"pointer\",\r\n            borderBottom: theme.optionsHr,\r\n            borderTop: theme.optionsHr,\r\n            position: 'relative'\r\n        },\r\n        itemHover: {\r\n            filter: 'sepia(20%)',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.08)'\r\n        },\r\n        selectedOption: {\r\n            //\"filter\": \"brightness(30%)\",\r\n            backgroundColor: 'hsl(0deg, 0%, 60%)'\r\n        },\r\n        selectedOptionOverlay: {\r\n            position: \"absolute\", \r\n            height: '100%', \r\n            width: '100%', \r\n            backgroundColor: 'rgba(22, 198, 12, 0.5)', \r\n            top: 0, \r\n            left: 0, \r\n            display: 'flex', \r\n            justifyContent: 'center'\r\n        },\r\n        selectedOptionIcon: {\r\n            paddingLeft: '80%', \r\n            marginTop: 'auto', \r\n            marginBottom: 'auto' \r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nexport function useHover() {\r\n    const [value, setValue] = React.useState(false);\r\n    const ref = React.useRef(null);\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n  \r\n    React.useEffect(\r\n      () => {\r\n        const node = ref.current;\r\n        if (node) {\r\n          node.addEventListener('mouseover', handleMouseOver);\r\n          node.addEventListener('mouseout', handleMouseOut);\r\n  \r\n          return () => {\r\n            node.removeEventListener('mouseover', handleMouseOver);\r\n            node.removeEventListener('mouseout', handleMouseOut);\r\n          };\r\n        }\r\n      },\r\n      [ref.current] // Recall only if ref changes\r\n    );\r\n    return [ref, value];\r\n  }\r\n\r\n  export function DropdownIcon({rotate, style}) {\r\n\r\n    const styles = {\r\n      ...style,\r\n      ...(rotate ? {transform: 'rotate(180deg)'} : {})\r\n    }\r\n\r\n    return (\r\n      <svg style={styles} x=\"0px\" y=\"0px\" width=\"10px\" height=\"10px\" viewBox=\"0 0 255 255\" space=\"preserve\">\r\n        <g>\r\n          <g id=\"arrow-drop-down\">\r\n            <polygon points=\"0,63.75 127.5,191.25 255,63.75\" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    )\r\n  }","import React from 'react'\nimport { defaultStyles, defaultTheme } from './styles'\nimport { DropdownIcon, useHover } from './utils'\n\nexport { defaultStyles, defaultTheme }\n\nconst Context = React.createContext({ styles: {} })\n\nfunction useStyles() {\n  const { styles } = React.useContext(Context)\n  return styles\n}\n\nfunction Item({ element, onClick, isSelected }) {\n  const { item, selectedOption, itemHover, selectedOptionOverlay, selectedOptionIcon } = useStyles()\n  const [ref, hovered] = useHover()\n\n  const currentStyle = {\n    ...item,\n    ...(isSelected ? selectedOption : {}),\n    ...(hovered ? itemHover : {})\n  }\n\n  return (\n    <div ref={ref} onClick={(e) => onClick(e)} style={currentStyle}>\n      {element.component}\n      {isSelected && (\n        <div style={selectedOptionOverlay}>\n          <div style={selectedOptionIcon}>{hovered ? \"✖\" : \"✅\"}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction EmptySelector({ text }) {\n  const { placeholder, selectedItem } = useStyles()\n  return (\n    <div style={{ ...selectedItem, ...placeholder }}>\n      <div style={{ marginTop: 'auto', marginBottom: 'auto', marginLeft: 3 }}>\n        {text}\n      </div>\n    </div>\n  )\n}\n\nfunction SelectedItem({ selected, placeholder }) {\n  const { selectedItem } = useStyles()\n  if (selected == null || !Array.isArray(selected) || selected.length !== 1)\n    return <EmptySelector text={placeholder} />\n\n  const component = selected[0].component\n\n  return (\n    <div style={selectedItem}>\n      <div style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n        {component}\n      </div>\n    </div>\n  )\n}\n\nfunction ItemEraser({ onClick }) {\n  const { itemEraser, itemEraserHover } = useStyles()\n  const [ref, hovered] = useHover()\n\n  const currentStyle = {\n    ...itemEraser,\n    ...(hovered ? itemEraserHover : {})\n  }\n\n  return (\n    <div ref={ref} onClick={onClick} style={currentStyle}>\n      ✖\n    </div>\n  )\n}\n\nfunction ItemWrapper({ children, onErase }) {\n  const { itemWrapper, wrapperBox } = useStyles()\n  return (\n    <div style={{margin: 'auto 0'}}>\n      <div style={itemWrapper}>\n        <div style={wrapperBox}>\n          {children}\n        </div>\n\n        <ItemEraser onClick={onErase} />\n      </div>\n    </div>\n\n  )\n}\n\nfunction SelectedItemsArray({ selected, onErase, placeholder }) {\n  const { selectedItem, multiselectedItems } = useStyles()\n  if (selected == null || !Array.isArray(selected) || selected.length === 0)\n    return <EmptySelector text={placeholder} />\n\n  return (\n    <div style={{ ...selectedItem, ...multiselectedItems }}>\n      {selected.map(el => (\n        <ItemWrapper onErase={() => onErase(el)}>{el.component}</ItemWrapper>\n      ))}\n    </div>\n  )\n}\n\nfunction DropdownButton({ onClick, rotate }) {\n  const [ref, hovered] = useHover()\n  const { dropdownButton, dropdownButtonHover, dropdownIcon } = useStyles()\n\n  const currentStyle = {\n    ...dropdownButton,\n    ...(hovered ? dropdownButtonHover : {})\n  }\n\n  return (\n    <button ref={ref} style={currentStyle} onClick={onClick}>\n      <DropdownIcon style={dropdownIcon} rotate={rotate} />\n    </button>\n  )\n}\n\nfunction useWidth(optionsRef, userWidth) {\n  const [[width, isAuto], setWidth] = React.useReducer((prev, value) => {\n    if (value === 'auto') {\n      return [null, true]\n    }\n    if (Number.isInteger(value)) {\n      return [value, false]\n    }\n    return [null, false]\n  }, [50, false])\n\n  React.useEffect(() => {\n    setWidth(userWidth)\n  }, [userWidth])\n\n  React.useEffect(() => {\n    if (optionsRef.current == null)\n      return\n    if (!isAuto)\n      return\n\n    const elem = optionsRef.current\n\n    elem.style.visibility = 'hidden'\n    elem.style.display = 'block'\n    setTimeout(() => {\n      setWidth(elem.scrollWidth)\n      elem.style.display = 'none'\n      elem.style.visibility = 'visible'\n    })\n  }, [optionsRef.current])\n\n  return width\n}\n\nfunction useSlide(optionsRef, animationTime) {\n\n  const slideDown = (elem) => {\n    elem.style.display = 'block'\n    elem.style.transition = `height, ${animationTime}s linear`\n    elem.style.height = `${elem.scrollHeight}px`;\n    timeoutShowRef.current = setTimeout(() => {\n      elem.style[\"overflow-y\"] = \"auto\";\n    }, animationTime * 1000.0)\n  }\n\n  const slideUp = (elem) => {\n    elem.style[\"overflow-y\"] = \"hidden\";\n    elem.style.transition = `height, ${animationTime}s linear`\n    elem.style.height = `0px`;\n    timeoutShowRef.current = setTimeout(() => {\n      elem.style.display = \"none\";\n    }, animationTime * 1000.0)\n  }\n\n  const timeoutShowRef = React.useRef()\n\n  const [show, setShow] = React.useReducer((s, value) => {\n    clearTimeout(timeoutShowRef.current)\n\n    if (value === true) {\n      slideDown(optionsRef.current);\n    }\n    else {\n      slideUp(optionsRef.current)\n    }\n\n    return value\n  }, false)\n\n  return [show, setShow]\n}\n\nfunction useFlip(optionsRef, show, position = 'bottom', auto = true) {\n\n  const flipTop = (elem) => {\n    elem.style.transformOrigin = 'bottom'\n    elem.style.top = 'unset'\n    elem.style.bottom = '100%'\n  }\n\n  const flipBottom = (elem) => {\n    elem.style.transform = ''\n    elem.style.bottom = 'unset'\n    elem.style.top = 'unset'\n  }\n\n  const [current, setCurrent] = React.useState(position)\n  React.useEffect(() => setCurrent(position), [position])\n\n  const checkPosition = () => {\n    if (optionsRef.current == null)\n      return\n\n    if (show !== true)\n      return\n\n    const y = optionsRef.current.parentElement.getBoundingClientRect().top\n    const screenHeight = window.innerHeight\n    const height = optionsRef.current.scrollHeight\n\n    if (y + height + 100 > screenHeight && y - height > 0) {\n      if (current != 'top')\n        setCurrent('top')\n    } else if (y + height - 100 < screenHeight) {\n      if (current != 'bottom')\n        setCurrent('bottom')\n    }\n  }\n\n  React.useEffect(() => {\n    if (optionsRef.current == null)\n      return\n    if (show !== true)\n      return\n\n    switch (current) {\n      case 'bottom': return flipBottom(optionsRef.current);\n      case 'top': return flipTop(optionsRef.current)\n    }\n  }, [optionsRef.current, show, current])\n\n  React.useEffect(() => {\n    if (optionsRef.current == null)\n      return\n    if (auto !== true)\n      return\n\n    checkPosition()\n    document.addEventListener('scroll', checkPosition)\n    return () => {\n      document.removeEventListener('scroll', checkPosition)\n    }\n  }, [optionsRef.current, auto, show, current])\n\n}\n\nexport default function ({\n  width,\n  onSelect,\n  selectedKeys,\n  items = [],\n  multiselect = false,\n  placeholder,\n  internalStyles = defaultStyles(),\n  animationTime = 0.2,\n  style = {},\n  height\n}) {\n\n  const createValue = (selectedArray) => {\n    if (multiselect === true) {\n      return selectedArray.map(el => el.key)\n    }\n    return selectedArray.length > 0 ? selectedArray[0].key : null\n  }\n\n  const controlled = (selectedKeys != null && (multiselect === true && Array.isArray(selectedKeys) || (multiselect === false && (typeof selectedKeys === 'string' || selectedKeys instanceof String))))\n\n  const [selected, dispatchSelected] = React.useReducer((prev, action) => {\n    switch (action.type) {\n      case 'reset': {\n        if (controlled) {\n          const filtered = multiselect ?\n            selectedKeys.map(key => items.find(i => i.key == key)).filter(el => el != null) :\n            [items.find(i => i.key == selectedKeys)]\n          return { final: filtered, value: createValue(filtered) }\n        }\n        return prev\n      }\n\n      case 'erase': {\n        const key = action.key\n        const index = prev.final.findIndex(el => el.key === key)\n        if (index == null)\n          return prev\n\n        const final = [...prev.final]\n        final.splice(index, 1)\n        const value = createValue(final)\n        onSelect && onSelect(value)\n        return controlled ? prev : { final, value }\n      }\n\n      case 'select': {\n        const final = multiselect ? [...prev.final, action.element] : [action.element]\n        const value = createValue(final)\n        onSelect && onSelect(value)\n        return controlled ? prev : { final, value }\n      }\n    }\n  }, { final: [], value: [] })\n\n  React.useEffect(() => {\n    dispatchSelected({ type: 'reset' })\n  }, [selectedKeys])\n\n\n  const optionsRef = React.useRef()\n  const containerRef = React.useRef()\n  const timeoutBlurRef = React.useRef()\n\n  const [show, setShow] = useSlide(optionsRef, animationTime)\n\n  useFlip(optionsRef, show)\n  const computedWidth = useWidth(optionsRef, width)\n  const containerStyle = {\n    ...internalStyles.container,\n    ...(Number.isInteger(computedWidth) ? { width: multiselect ? computedWidth + 100 : computedWidth + 100 } : {}),\n    ...style\n  }\n\n  const inputConteinerStyles = {\n    ...internalStyles.inputContainer,\n    ...(height != null && Number.isInteger(height) ? { minHeight: `${height}px` } : {})\n  }\n\n\n  const onErase = (element) => {\n    dispatchSelected({ type: 'erase', key: element.key })\n  }\n\n  const selectedComponent = React.useMemo(() => {\n    return multiselect === true ?\n      <SelectedItemsArray placeholder={placeholder} onErase={onErase} selected={selected.final} /> :\n      <SelectedItem placeholder={placeholder} selected={selected.final} />\n  }, [selected.final, multiselect])\n\n  const isSelected = React.useCallback((element) => {\n    return selected.final.find(el => el.key == element.key) != null\n  }, [selected.final])\n\n  const onItemClick = React.useCallback((element, e) => {\n    if (isSelected(element))\n      return onErase(element)\n    dispatchSelected({ type: 'select', element })\n  }, [selected, multiselect])\n\n  return (\n    <Context.Provider\n      value={{\n        styles: internalStyles,\n        computedWidth\n      }}\n    >\n      <div\n        ref={containerRef}\n        tabIndex={0}\n        style={containerStyle}\n        onBlur={() => timeoutBlurRef.current = setTimeout(() => setShow(false), 100)}\n        onFocus={() => clearTimeout(timeoutBlurRef.current)}\n      >\n        <div style={inputConteinerStyles}>\n          {selectedComponent}\n          <DropdownButton onClick={() => setShow(!show)} rotate={show} />\n        </div>\n        <div ref={optionsRef} id=\"optionsContainer\" style={internalStyles.optionsContainer}>\n          {items.map(el => (\n            <Item isSelected={isSelected(el)} key={`item-${el.key}`} onClick={() => {\n              onItemClick(el)\n              if (!multiselect)\n                setShow(false)\n            }} element={el} />\n          ))}\n        </div>\n      </div>\n    </Context.Provider>\n  )\n}\n","import React from 'react'\r\n\r\nimport Select from 'custom-item-select'\r\nimport 'custom-item-select/dist/index.css'\r\nimport './theme.css'\r\nimport { Badge, Container, Card } from 'react-bootstrap'\r\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport docco from 'react-syntax-highlighter/dist/esm/styles/hljs/docco';\r\nimport color from 'color'\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst random = (min, max) => {\r\n    return parseInt((max - min) * Math.random() + min)\r\n}\r\n\r\nexport function Item({ children }) {\r\n    return (\r\n        <Badge variant=\"primary\">\r\n            {children}\r\n        </Badge>\r\n    )\r\n}\r\n\r\nexport function PersonBadgeRandomProps() {\r\n    return {\r\n        bgColor: color.rgb(random(50, 200), random(50, 200), random(50, 200)),\r\n        avatar: String.fromCharCode(random(65, 90))\r\n    }\r\n}\r\n\r\nexport function PersonBadge({ children, bgColor, avatar }) {\r\n\r\n    const txtColor = bgColor.isDark() ? bgColor.lighten(0.8) : bgColor.darken(0.8)\r\n    \r\n    const containerStyle = {\r\n        \"display\": \"inline-block\",\r\n        \"padding\": \".25em .8em\",\r\n        \"fontSize\": \"75%\",\r\n        \"fontWeight\": \"700\",\r\n        \"lineHeight\": \"1\",\r\n        \"textAlign\": \"center\",\r\n        \"whiteSpace\": \"nowrap\",\r\n        \"verticalAlign\": \"baseline\",\r\n        \"borderRadius\": \".25rem\",\r\n        backgroundColor: bgColor,\r\n        color: 'white',\r\n        margin: 5,\r\n\r\n    }\r\n\r\n    const gridStyle = {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'auto 2fr'\r\n    }\r\n\r\n    const avatarContainerStyle = {\r\n        height: 20,\r\n        width: 20,\r\n        borderRadius: 15,\r\n        boxShadow: '0 0 5px 0 rgba(0, 0, 0, 0.2)',\r\n        transformOrigin: 'center',\r\n        transform: 'scale(1.5)',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        \"fontSize\": \"75%\",\r\n        \"fontWeight\": \"100\",\r\n        \"lineHeight\": \"1\",\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        padding: 0,\r\n    }\r\n\r\n    const textStyle = {\r\n        marginLeft: 10,\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        color: txtColor\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <div style={gridStyle}>\r\n                <div style={avatarContainerStyle}>\r\n                    <span style={{}}>\r\n                        {avatar}\r\n                    </span>\r\n                </div>\r\n                <div style={textStyle}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Example({ title, description, children }) {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{title}</Card.Title>\r\n                <Card.Text>{description}</Card.Text>\r\n                {children}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function Code({ children }) {\r\n    return (\r\n        <SyntaxHighlighter style={docco}>\r\n            {children}\r\n        </SyntaxHighlighter>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Select from 'custom-item-select'\r\nimport { Badge, Container, Card } from 'react-bootstrap'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n    { key: \"Ana\", component: <PersonBadge {...rand()}>Ana</PersonBadge> },\r\n    { key: \"Bentha\", component: <PersonBadge {...rand()}>Bentha</PersonBadge> },\r\n    { key: \"Val\", component: <PersonBadge {...rand()}>Val</PersonBadge> },\r\n    { key: \"Ingo\", component: <PersonBadge {...rand()}>Ingo</PersonBadge> },\r\n    { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n    { key: \"Naria\", component: <PersonBadge {...rand()}>Naria</PersonBadge> },\r\n    { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nconst exampleItem = <PersonBadge {...rand()}>Misou</PersonBadge>\r\n\r\nexport default function() {\r\n    const [value, setValue] = React.useState()\r\n    return (\r\n      <Example\r\n        title=\"Basic useage\"\r\n        description=\"Standard HTML single-select behaviour with custom item components.\"\r\n      >\r\n        Example component as item: {exampleItem}\r\n        <br />\r\n        Value: {value}\r\n        <br />\r\n        <Select\r\n          items={items}\r\n          onSelect={(key) => setValue(key)}\r\n          placeholder=\"select one element...\"\r\n          width='auto'\r\n          height={40}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select from 'custom-item-select'\r\n//...\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  //...\r\n  { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nfunction() {\r\n  const [values, setValues] = React.useState()\r\n  return (\r\n    <Select\r\n      items={items}\r\n      onSelect={(key) => setValue(key)}\r\n      placeholder=\"select one element...\"\r\n    />\r\n  )\r\n}\r\n\r\n`}\r\n      </Code>\r\n      </Example>\r\n    )\r\n  }","import React from 'react'\r\nimport Select from 'custom-item-select'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n  { key: \"Ana\", component: <PersonBadge {...rand()}>Ana</PersonBadge> },\r\n  { key: \"Bentha\", component: <PersonBadge {...rand()}>Bentha</PersonBadge> },\r\n  { key: \"Val\", component: <PersonBadge {...rand()}>Val</PersonBadge> },\r\n  { key: \"Ingo\", component: <PersonBadge {...rand()}>Ingo</PersonBadge> },\r\n  { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n  { key: \"Naria\", component: <PersonBadge {...rand()}>Naria</PersonBadge> },\r\n  { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n  const [values, setValues] = React.useState()\r\n  return (\r\n    <Example\r\n      title=\"Multiselect\"\r\n      description=\"\"\r\n    >\r\n      Values: {values && values.map(v => `${v}, `)}\r\n      <br />\r\n      <div>\r\n        <Select\r\n          multiselect\r\n          onSelect={keys => setValues(keys)}\r\n          items={items}\r\n          width='auto'\r\n          height={80}\r\n          placeholder=\"select multiple options\"\r\n        />\r\n      </div>\r\n      <br/>\r\n      <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select from 'custom-item-select'\r\n//...\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  //...\r\n  { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nfunction() {\r\n  const [values, setValues] = React.useState()\r\n  return (\r\n    <Select \r\n      multiselect\r\n      onSelect={keys => setValues(keys)}  \r\n      items={items} \r\n      width='auto'\r\n      placeholder=\"select multiple options\"\r\n    />\r\n  )\r\n}\r\n\r\n`}\r\n      </Code>\r\n\r\n    </Example>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Select, { defaultStyles, defaultTheme } from 'custom-item-select'\r\nimport { Badge, Container, Card } from 'react-bootstrap'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n  { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n  { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n  const theme = defaultTheme()\r\n  theme.selectedItemBackground = 'rgb(50, 100, 200)'\r\n  theme.standardBoxShadow = '0px 0px 5px 0px rgba(50, 150, 200, 0.4)'\r\n\r\n  const customStyles = defaultStyles()\r\n  customStyles.dropdownButton.backgroundColor = 'rgba(0, 50, 200, 0.5)'\r\n\r\n  return (\r\n    <Example\r\n      title=\"Theming\"\r\n      description=\"\"\r\n    >\r\n      <code>style</code> prop modifies main container style.\r\n      <Select\r\n        style={{ display: 'block', margin: 20 }}\r\n        items={items}\r\n      />\r\n\r\n      <Code>\r\n        {\r\n          `\r\n//...\r\nfunction() {\r\n    return (\r\n      <Select\r\n        style={{ display: 'block', margin: 20 }}\r\n        items={items}\r\n      />\r\n    )\r\n}\r\n\r\n`}\r\n      </Code>\r\n      \r\n      <br />\r\n      <hr/>\r\n      <br />\r\n        Use <code>defaultTheme</code> function to get and modify theme default values, for example changing the background color.\r\n        Based on modified theme object, create custom internal styles and pass it to <code>internalStyles</code> prop.\r\n        <br />\r\n        <br/>\r\n      <Select\r\n        internalStyles={defaultStyles(theme)}\r\n        items={items}\r\n        placeholder=\"select one element...\"\r\n      />\r\n      <br /><br />\r\n      <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select, {defaultStyles, defaultTheme} from 'custom-item-select'\r\n//...\r\nfunction() {\r\n    const theme = defaultTheme()\r\n    theme.selectedItemBackground = 'rgb(0, 50, 200)'\r\n    theme.standardBoxShadow = '0px 0px 5px 0px rgba(0, 50, 200, 0.4)'\r\n    return (\r\n        <Select\r\n            internalStyles={defaultStyles(theme)}\r\n            items={items}\r\n        />\r\n    )\r\n}\r\n\r\n`}\r\n      </Code>\r\n      \r\n      <br />\r\n      <hr/>\r\n      <br />\r\n\r\n        You can also modify all internal components styles:<br />\r\n        <br/>\r\n      <Select\r\n        internalStyles={customStyles}\r\n        items={items}\r\n        placeholder=\"select one element...\"\r\n      />\r\n      <br />\r\n      <br/>\r\n      <Code>\r\n        {\r\n          `\r\nimport React from 'react'\r\nimport Select, {defaultStyles, defaultTheme} from 'custom-item-select'\r\n//...\r\nfunction() {\r\n    const customStyles = defaultStyles()\r\n    customStyles.dropdownButton.backgroundColor = 'rgba(0, 50, 200, 0.5)'\r\n    return (\r\n        <Select\r\n            internalStyles={customStyles}\r\n            items={items}\r\n        />\r\n    )\r\n}\r\n\r\n`}\r\n      </Code>\r\n    </Example>\r\n  )\r\n}","import React from 'react'\r\nimport Select, { defaultStyles, defaultTheme } from 'custom-item-select'\r\nimport { Badge, Container, Card, Table } from 'react-bootstrap'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n    const theme = defaultTheme()\r\n    theme.selectedItemBackground = 'rgb(50, 100, 200)'\r\n    theme.standardBoxShadow = '0px 0px 5px 0px rgba(50, 150, 200, 0.4)'\r\n\r\n    const customStyles = defaultStyles()\r\n    customStyles.dropdownButton.backgroundColor = 'rgba(0, 50, 200, 0.5)'\r\n\r\n    return (\r\n        <Example\r\n            title=\"Props\"\r\n            description=\"\"\r\n        >\r\n            <Table striped bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Prop</th>\r\n                        <th>Default</th>\r\n                        <th>Values</th>\r\n                        <th>Description</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>items</td>\r\n                        <td><code>{\"[]\"}</code></td>\r\n                        <td>\r\n                            Array with objects as select options:\r\n                            <br />\r\n                            <Code>\r\n                                {`[\r\n    {key: 'key1', component: <CustomItemComponent/>},\r\n    {key: 'key2', component: <WhateverComponent/>}}\r\n]\r\n`}\r\n                            </Code>\r\n                        </td>\r\n                        <td>Keys must be unique, Components may be same or different types.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>multiselect</td>\r\n                        <td>false</td>\r\n                        <td>\r\n                            <code>true | false</code>\r\n                        </td>\r\n                        <td>\r\n                            If <code>true</code> you can select multiple options.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>placeholder</td>\r\n                        <td><code>null</code></td>\r\n                        <td>\r\n                            <code>null | string</code>\r\n                        </td>\r\n                        <td>\r\n                            The text if nothing is selected.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>internalStyles</td>\r\n                        <td>\r\n                            <code>defaultStyles()</code>\r\n                        </td>\r\n                        <td>\r\n                            You can get and modify the object with styles by:\r\n                            <Code>\r\n                                {`\r\nimport { defaultStyles } from 'custom-item-select'  \r\n//...\r\nconst styles = defaultStyles()\r\n`}\r\n                            </Code>\r\n                        </td>\r\n                        <td>\r\n                            By this object all internal components are styled.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>onSelect</td>\r\n                        <td><code>null</code></td>\r\n                        <td>\r\n                            If multiselect is <code>false</code>:<br />\r\n                            <code>{\"(selectedKey) => { /*...*/ }\"}</code><br />\r\n                            If multiselect is <code>true</code>:<br />\r\n                            <code>{\"(allSelectedKeysArray) => { /*...*/ }\"}</code>\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>animationTime</td>\r\n                        <td><code>0.2</code> [sec]</td>\r\n                        <td>Numeric value</td>\r\n                        <td>Time of slide up/down animation</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>width</td>\r\n                        <td>null</td>\r\n                        <td><code>{'null | \"auto\" | numeric value'}</code></td>\r\n                        <td>\r\n                            Defines width of component.<br/>\r\n                            If <code>null</code>, width is defined by internalStyles and style prop.\r\n                            <br /><br/>\r\n                            If <code>{'auto'}</code>, width is computed to contain all items in options\r\n                            <br/><br/>\r\n                            Use numeric value to set width to main component style.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>height</td>\r\n                        <td>null</td>\r\n                        <td><code>{'null | numeric value'}</code></td>\r\n                        <td>\r\n                            Defines min height of component.<br/>\r\n                            If <code>null</code>, height is defined by internalStyles.\r\n                            <br /><br/>\r\n                            Use numeric value to set min height to container of selected options.\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>selectedKeys</td>\r\n                        <td>null</td>\r\n                        <td>\r\n                            <code>{`null`}</code><br/>\r\n                            <code>{`[array_with_keys]`}</code>  if multiselect<br/>\r\n                            <code>{`\"string key\"`}</code> if singleselect\r\n                        </td>\r\n                        <td>\r\n                            If not null - selected items are controlled by this prop.<br/>\r\n                            <br/>\r\n                            If <code>null</code>, selected items are stored inside Select component. You can still track changes by <code>onSelect</code> event prop.\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </Example>\r\n    )\r\n}","import React from 'react'\r\nimport Select from 'custom-item-select'\r\nimport { Code, Example, Item, PersonBadge, PersonBadgeRandomProps as rand } from './utils'\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    { key: \"Chalbran\", component: <PersonBadge {...rand()}>Chalbran </PersonBadge> },\r\n    { key: \"Ana\", component: <PersonBadge {...rand()}>Ana</PersonBadge> },\r\n    { key: \"Bentha\", component: <PersonBadge {...rand()}>Bentha</PersonBadge> },\r\n    { key: \"Val\", component: <PersonBadge {...rand()}>Val</PersonBadge> },\r\n    { key: \"Ingo\", component: <PersonBadge {...rand()}>Very long Name: IngoIngoIngo</PersonBadge> },\r\n    { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n    { key: \"Naria\", component: <PersonBadge {...rand()}>Naria</PersonBadge> },\r\n    { key: \"Miko\", component: <PersonBadge {...rand()}>Miko</PersonBadge> },\r\n]\r\n\r\nexport default function () {\r\n    const [values, setValues] = React.useState([\"Zuk\"])\r\n    const [single, setSingle] = React.useState(\"Zuk\")\r\n\r\n    const lastTwoValues = (keys) => {\r\n        console.log(keys)\r\n        setValues(keys.length > 2 ? keys.slice(-2) : keys)\r\n    }\r\n\r\n    return (\r\n        <Example\r\n            title=\"Controlled\"\r\n            description=\"You can control current selected items by passing array with keys to selectedKeys prop.\"\r\n        >\r\n            \r\n            <br />\r\n            <div>\r\n                <b>Multiselect</b> values: {values && values.join()}<br/>\r\n                <Select\r\n                    multiselect\r\n                    onSelect={keys => lastTwoValues(keys)}\r\n                    selectedKeys={values}\r\n                    items={items}\r\n                    width='auto'\r\n                    placeholder=\"select multiple options\"\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <b>Singleselect</b> value: {single}<br/>\r\n                <Select\r\n                    onSelect={key => setSingle(key)}\r\n                    selectedKeys={single}\r\n                    items={items}\r\n                    width='auto'\r\n                    placeholder=\"select multiple options\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <br/>\r\n            <Code>\r\n                {\r\n                    `\r\nimport React from 'react'\r\nimport Select from 'custom-item-select'\r\n//...\r\n\r\nconst items = [\r\n    { key: \"Misou\", component: <PersonBadge {...rand()}>Misou</PersonBadge> },\r\n    //...\r\n    { key: \"Zuk\", component: <PersonBadge {...rand()}>Zuk</PersonBadge> },\r\n]\r\n                    \r\nfunction() {\r\n    const [values, setValues] = React.useState([\"Zuk\"])\r\n    const [single, setSingle] = React.useState(\"Zuk\")\r\n\r\n    const lastTwoValues = (keys) => {\r\n        console.log(keys)\r\n        setValues(keys.length > 2 ? keys.slice(-2) : keys)\r\n    }\r\n\r\n    return (\r\n        <b>Multiselect</b> values: {values && values.join()}<br/>\r\n        <Select\r\n            multiselect\r\n            onSelect={keys => lastTwoValues(keys)}\r\n            selectedKeys={values}\r\n            items={items}\r\n            width='auto'\r\n            placeholder=\"select multiple options\"\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <b>Singleselect</b> value: {single}<br/>\r\n        <Select\r\n            onSelect={key => setSingle(key)}\r\n            selectedKeys={single}\r\n            items={items}\r\n            width='auto'\r\n            placeholder=\"select multiple options\"\r\n        />\r\n    )\r\n}\r\n                    `\r\n                }\r\n            </Code>\r\n        </Example>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport SingleSelect from './Example1'\nimport Multiselect from './Example2'\nimport Theming from './Example3'\nimport PropsExample from './PropsExample'\nimport Controlled from './Example4'\n\n//TODO:\n// Props explanation,\n// Compare behaviour to HTML select,\n// Descriptions and texts,\n// Different components in one select,\n// Deal with forms\n\nconst App = () => {\n  const [value, setValue] = React.useState(\"1\")\n  return (\n    <Container style={{ maxWidth: 1200 }}>\n      <h1><b>custom-item-select</b> demo</h1>\n      <a target=\"_blank\" href=\"https://github.com/ktomecki/custom-item-select\">GitHub</a>\n      {\" | \"}\n      <a target=\"_blank\" href=\"https://www.npmjs.com/package/custom-item-select\" alt=\"NPM\"><img src=\"https://img.shields.io/npm/v/custom-item-select.svg\"/></a>\n      <br/>\n      <br/>\n      <SingleSelect />\n      <br />\n      <Multiselect />\n      <br/>\n      <Controlled/>\n      <br/>\n      <PropsExample/>\n      <br/>\n      <Theming/>\n      <br/>     \n    </Container>\n  )\n}\n\nexport default App\n","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}